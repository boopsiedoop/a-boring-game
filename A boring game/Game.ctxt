#BlueJ class context
comment0.target=Game
comment0.text=\r\n\ \ This\ class\ is\ the\ main\ class\ of\ the\ "A\ boring\ game"\ application.\ \r\n\ \ "A\ boring\ game"\ as\ the\ name\ suggests\ is\ a\ very\ boring,\ text\ based\ adventure\ game.\ \ Users\ \r\n\ \ can\ walk\ around\ some\ scenery.\ and\ interact\ with\ some\ monsters.\ \r\n\ \ so\ much\ fun\r\n\ \r\n\ \ This\ main\ class\ creates\ and\ initialises\ all\ the\ others\:\ it\ creates\ all\r\n\ \ rooms,\ creates\ the\ keys\ array,creates\ the\ parser\ and\ starts\ the\ game.\ \ It\ also\ evaluates\ and\r\n\ \ executes\ the\ commands\ that\ the\ parser\ returns.\r\n\ \r\n\ @author\ \ Dani\u00EBlle\ van\ der\ Tuin\r\n\ @version\ 23-1-2020\r\n
comment1.params=
comment1.target=Game()
comment1.text=\r\n\ Create\ the\ game\ and\ initialise\ its\ internal\ map.\r\n
comment10.params=command
comment10.target=boolean\ quit(Command)
comment10.text=\ \r\n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\r\n\ whether\ we\ really\ quit\ the\ game.\r\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\r\n
comment11.params=command
comment11.target=void\ back(Command)
comment11.text=\ \r\n\ "Back"\ was\ entered.\ \r\n\ Check\ if\ it\ is\ possible\ to\ go\ back.\r\n\ If\ going\ back\ is\ possible,\ go\ back.\r\n\ If\ it\ is\ not\ possible\ print\ messsage.\r\n
comment12.params=
comment12.target=void\ pickUp()
comment12.text=\ \r\n\ "Pickup"\ was\ entered.\ \r\n\ Check\ if\ there\ is\ something\ to\ pickup.\r\n\ If\ there\ is\ nothing\ to\ pickup\ print\ message.\r\n\ If\ there\ is\ something\ to\ pickup,\ pick\ it\ up.\r\n
comment13.params=
comment13.target=void\ catchButterfly()
comment13.text=\ \r\n\ "Catch"\ was\ entered.\ \r\n\ Check\ if\ there\ is\ something\ to\ catch.\r\n\ If\ there\ is\ nothing\ to\ catch\ print\ message.\r\n\ If\ there\ is\ something\ to\ catch,\ catch\ it.\r\n
comment2.params=
comment2.target=void\ createKeys()
comment2.text=\r\n\ Create\ all\ the\ slots\ for\ the\ keys.\r\n\ keep\ checking\ if\ keys\ had\ reached\ a\ length\ of\ 5.\r\n\ if\ true\ then\ create\ the\ big\ key\r\n
comment3.params=
comment3.target=void\ createRooms()
comment3.text=\r\n\ Create\ all\ the\ rooms\ and\ link\ their\ exits\ together.\r\n
comment4.params=
comment4.target=void\ play()
comment4.text=\r\n\ \ Main\ play\ routine.\ \ Loops\ until\ end\ of\ play.\r\n
comment5.params=
comment5.target=void\ printWelcome()
comment5.text=\r\n\ Print\ out\ the\ first\ room\ description.\r\n
comment6.params=
comment6.target=void\ printMenu()
comment6.text=\r\n\ Print\ out\ the\ menu.\r\n
comment7.params=command
comment7.target=boolean\ processCommand(Command)
comment7.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ @param\ command\ The\ command\ to\ be\ processed.\r\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise.\r\n
comment8.params=
comment8.target=void\ printHelp()
comment8.text=\r\n\ Print\ out\ some\ help\ information.\r\n\ Here\ we\ print\ some\ stupid,\ cryptic\ message\ and\ a\ list\ of\ the\ \r\n\ command\ words.\r\n
comment9.params=command
comment9.target=void\ goRoom(Command)
comment9.text=\ \r\n\ Try\ to\ go\ in\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\r\n\ room,\ otherwise\ print\ an\ error\ message.\r\n\ check\ for\ certain\ requirements\ go\ enter\ a\ room\r\n
numComments=14
